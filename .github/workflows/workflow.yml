env:
  RAILS_ENV: test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  DATABASE_HOST: localhost
  DATABASE_PORT: 5432

name: Rails CI
on: [push,pull_request]
jobs:
  linters:
    name: Linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --pure-lockfile
      - name: Run linters
        run: |
          bundle exec rubocop
          node_modules/.bin/eslint app --ext .js,.jsx

  tests:
    name: Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports: ["5432:5432"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --pure-lockfile
      - name: Create database
        run: |
          cp config/database.github-actions.yml.example config/database.yml
          bundle exec rails db:create
          bundle exec rails db:migrate
        env:
          DATABASE_USER: ${{ env.POSTGRES_USER }}
          DATABASE_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          DATABASE_HOST: ${{ env.DATABASE_HOST }}
          DATABASE_PORT: ${{ env.DATABASE_PORT }}
          RAILS_ENV: ${{ env.RAILS_ENV }}
      - name: Run tests
        run: |
          yarn
          bundle exec rspec
        env:
          DATABASE_USER: ${{ env.POSTGRES_USER }}
          DATABASE_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          DATABASE_HOST: ${{ env.DATABASE_HOST }}
          DATABASE_PORT: ${{ env.DATABASE_PORT }}
          RAILS_ENV: ${{ env.RAILS_ENV }}
